<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd ">

	<!-- 会自动注册了validator ConversionService -->
	<mvc:annotation-driven conversion-service="conversion-service" />
		
	<task:annotation-driven />

	<!-- 以下 validator ConversionService 在使用 mvc:annotation-driven 会 自动注册 -->
	<!-- <bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		如果不加默认到 使用classpath下的 ValidationMessages.properties
		<property name="validationMessageSource" ref="messageSource" />
	</bean> -->
	<bean id="conversion-service"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
            <set>
                <bean class="com.rdfs.framework.core.converter.EnumConverterFactory" />
                <bean class="com.rdfs.framework.core.converter.DateConverterFactory" />
            </set>
        </property>
	</bean>
 	
	<!-- 开启controller注解支持 -->
	<!-- 注：如果base-package=com.yooli 则注解事务不起作用 TODO 读源码 -->
	<context:component-scan base-package="com.rdfs">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<mvc:resources mapping="/**" location="/" />
	<!-- /**的意思是所有文件夹及里面的子文件夹  /*是所有文件夹，不含子文件夹  /是web项目的根目录 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*/*" />
			<bean class="com.rdfs.framework.core.interceptor.DispatcherContextInterceptor"></bean>
		</mvc:interceptor>
		
	</mvc:interceptors>

	<mvc:view-controller path="/" view-name="forward:/login.jsp" />
	<!--当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->

	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

	<bean id="handlerAdapter"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
	</bean>


	<bean
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	 	<property name="favorPathExtension" value="true" />  
        <property name="favorParameter" value="true" />  
        <property name="ignoreAcceptHeader" value="true"></property>  
        <property name="defaultContentType" value="text/html" />  
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="html" value="text/html" />
				<entry key="file" value="application/octet-stream" />  
                <entry key="image" value="image/*" />
			</map>
		</property>
	</bean>
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 设置multipartResolver才能完成文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"  p:defaultEncoding="UTF-8">
	</bean>

	<!-- 控制器异常处理  扩展暂未使用 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		 <!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->  
    	<property name="defaultErrorView" value="exception/error"></property>  
    	<!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->  
    	<property name="exceptionAttribute" value="ex"></property>  
    	<!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 -->  
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">system/exception/error</prop>
				 <prop key="IOException">system/exception/error</prop>  
            	<prop key="java.sql.SQLException">system/exception/error_sql</prop>  
			</props>
		</property>
        <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->     
        <property name="warnLogCategory" value="WRAN"></property>     
	</bean>
</beans>
